# print('Hello')
#a = 2586
#b = a + 56.3
#print (type(b))
#print (a)
#s = 'Hello' 
#print(a,'-',b,'-',s ) # способ выводв 1
#print (f'{a} - {b} - {s}') # способ вывода 2
#print ('{} - {} - {}'.format(a,b,s)) # способ вывода 3
#print('{2} - {0} - {1} '.format(a,b,s)) # Меняем местами вывод переменных
# \n - переход на новую строку 


#      1. Вывод массива (Числовой)
#list = [1,2,3,4]
#print (list)

#      2. Ввывод массива строк 

#list = ['1','2','Hello','Day','6']
#print (list)

#      3. Вывод смешаного массива 
#list = ['1','2','Hello','Day',1,2,3,4,5, True]
#print (list)

# print() - отвечает за вывод данных 
# input() - отвечает за ввод данных 

#print ('Введите а');
#a = float(input())        # Для того чтобы значение считывалось как число нужно ввесть значение переменной перед input "a = int(input()) "
                        # Если нужны не целые числа то пошем float
#print ('Введите b');
#b =  float(input())
#print (a, '+', b, '=',a+b)

#                                                     Арифметические операции





#Важно и нужно, без них вы не напишете ни одной 
#программы
#Если помните математику – проблем не будет
#+, -, *, /, %, //, **
# Приоритет операций ; **, ⊕, ⊖, *, /, //, %, +, - 
# ( ) Скобки меняют приоритет
# // - Деление в целых числах 
# % - Получить остаток от деления 
# ** - Возвидение в степень 

# Для того чтобы окурглить число и убрать лишние числа поле запятой Пишем ___round если нет точных указаний число сокротиться,
#  если нужно указать количество чисел после запятой, нужно прописать число c = round (a*b,5)  
#a = 1.3
#b = 3
#c = round (a*b,5) 
#print(c)

# Для сокращения выражение 
#a = 3
#a = a +5
#a +=5            # Сокращение  
#print(a)



#                                                      Логические операции






#>, >=, <, <=, == (Операция сравнения ), != (Операция неравенства) 
#not, and, or(или) – не путать с &, |,^
#Кое-что ещё: is, is not, in, not i

#Сравнение 
#a = 1<4 and 2 < 5
#print (a)

# Ищим число в списке(массиве)
#f = [1,2,3,4,5]
#print(f)
#print (2 in f) # Ищим  число 2 
#print (not 6 in f)# Проверяем что нет числа 6 


# Проверяем четное ли число


#f = [1,2,3,4,5]
#print(f)
# is_odd = f[0] % 2 == 0  Певый вариант  Остаток от деления на 2 должен быть 0 
# is_odd = not f[0]%2 (Второй вариант проверить четное ли число )
#print(is_odd)
# Проверяем какое число больше 



#print('Введите число а')
#a = int(input('a = '))
#print('Введите число b') 
#b = int(input('b = '))
#if a>b:
#    print(a)
#else:
#    print(b)


#Используем оператор Elif (несколько вариантов)

#username = input('Введите имя пользовотеля: ')
#if username == 'Маша':
#    print('Ура!')
#elif username == 'Марина':
#    print('Марина я так вас ждал')
#elif username == 'Ильнар':
#    print ('Ильнар вы топ')
#else:
#    print ('Привет', username)


#                                                  Управляющие конструкции: while
#while condition:
 # operator 1
 # operator 2
 # . . .
 # operator n
#Цикл позволяет выполнить блок операторов какое-то количество раз

#original = 4589
#inverted = 0
#while original != 0: #Число не равно 0
#    inverted = inverted * 10 + (original % 10) #  Компануем перевернутое число   
#    original //= 10 # Делаем деление на 10
#   print(original) # Покажет промежуточный этап числа original 

#else: # Начинает роботать когда original равен 0
#    print('Хватит')
#print(inverted)



#                                          Управляющие конструкции: for
#for i in enumeration:
 # operator 1
 # operator 2
 # . . .
 # operator n

#for i in 1,2,3,4,5,6:   # Цыклом мы возводим все цыйры в квадрат и выводим 
#    print (i**2)

#list = [1,2,3,4]         # работа со списком 
#for i in list:
#    print (i**2)

#r = range(10)             # выводим все значения до 10 
#for i in r:
#    print (i)

# Можно сделать вот так:

#for i in range(5):   
#    print(i)   

 # Если необходимо ввывести цыфры в деопазоне от 1 до 4
#for i in range(1,5):
#    print (i)

# Если шаг должен быть в 2 или в 3 то:
#for i in range(1, 10 , 2): # третим аргументом ставим шиг(2)
#     print(i)


# В качестве аргумента можно принять и строки , будет разбивка по строкам 
#for i in 'Natasha':
#    print(i)

                                                     #Немного о строках



#text = 'съешь ещё этих мягких французских булок'
#print(len(text)) # 39                        - Получаем количество символов 
#print('ещё' in text) # True                  - Наличия подстроки(слова) в строке 
#print(text.isdigit()) # False                - Являются ли все символы строки числами 
#print(text.islower()) # True                 - Являются ли все символы строки, символами нижнего регистра 
#print(text.replace('ещё','ЕЩЁ')) #           - Если хотим что-то заменить
#for c in text:
# print(c)


# Для того чтобы вышел списк всех функций можно написать 
# text. - и выйдут все возможные варианты 
# Или клавиши  Ctrl пробел 

# Если ты не занешь  что значить какойт из функций то ты можешь сдеть:
# help(text.isdigit)


#                                                        Немного о строках
#text = 'съешь ещё этих мягких французских булок'
#print(text[0]) # c
#print(text[1]) # ъ
#print(text[len(text)-1]) # к
#print(text[-5]) # б
#print(text[:]) # print(text)
#print(text[:2]) # съ
#print(text[len(text)-2:]) # ок
#print(text[2:9]) # ешь ещё
#print(text[6:-18]) # ещё этих мягких
#print(text[0:len(text):6]) # сеикакл
#print(text[::6]) # сеикакл
#text = text[2:9] + text[-5] + text[:2] # ..



                                                         #Списки: введение
#numbers = [1, 2, 3, 4, 5]
#print(numbers) # [1, 2, 3, 4, 5]
#numbers = list(range(1, 6))
#print(numbers) # [1, 2, 3, 4, 5]
#numbers[0] = 10
#print(numbers) # [10, 2, 3, 4, 5]
#for i in numbers:
# i *= 2
#print(i) # [20, 4, 6, 8, 10]
#print(numbers) # [10, 2, 3, 4, 5

# Приводим тип run к типу лист 

#ran = range(1,6) # - Задаем переменную
#print(type(ran)) # - Выводим тпи run
#numbers = list(ran) # - Переводим тип range в list
#print(type(numbers)) # - Повторно печатаем тпи 


# Работаем с списком:
#numbers = [1,2,3,4,5,6]
#print(numbers)
#numbers[0] = 10              # - Присваеваем первому элементу значение 10
#print(f'{len(numbers)} len') # - Выводим количество элеменотв списка 
#for i in numbers:            #
#    i *= 2                   #
#    print(i)                 # - Умножаем все элементы на 2 

#colors = ['green','gold', 'blue']
#for e in colors:
#    print(e)                  # - Просто выводим значения 
#for e in colors:
#    print(e*2)                # - Увеличиваем в два раза (greengreen goldgold blueblue)

#colors.append('blek')         # - Добавить в конец 
#print(colors==['green','gold', 'blue']) # - False (так, как мы ренее добывили в списк blek)
#colors.remove('green') # или del colors[0]  - Удаление элемента 
#print(colors)   # - Стоит в конце для того чтожбы после всех действий вывести итоговый результат (без значений в циклах For они выводятся сами )

#                                                                 Функции
#Это фрагмент программы, используемый 
#многократно
#def function_name(x):    def - ключивое слово    function_name - имя  (x) - аргумент 
# body line 1             Тело метода 
# . . .
# body line n
 # optional retur           retur - оператор возвращения 



def f(x):
    if x==1:
        return 'Целое'
    elif x == 2.3:
        return 23
    else:
        return
arg = 1             # Задаем аргуметн 
print(f(arg))       # Выводим значение согласно цыклу 
print(type(f(arg))) # Выводим тип данных 